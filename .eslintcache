[{"D:\\Soraia\\Desktop\\Developer\\TesteTecnico\\carefy-web\\src\\index.tsx":"1","D:\\Soraia\\Desktop\\Developer\\TesteTecnico\\carefy-web\\src\\routes\\index.tsx":"2","D:\\Soraia\\Desktop\\Developer\\TesteTecnico\\carefy-web\\src\\services\\api.ts":"3","D:\\Soraia\\Desktop\\Developer\\TesteTecnico\\carefy-web\\src\\components\\Header\\styles.ts":"4","D:\\Soraia\\Desktop\\Developer\\TesteTecnico\\carefy-web\\src\\components\\Header\\index.tsx":"5","D:\\Soraia\\Desktop\\Developer\\TesteTecnico\\carefy-web\\src\\styles\\global.ts":"6","D:\\Soraia\\Desktop\\Developer\\TesteTecnico\\carefy-web\\src\\App.tsx":"7","D:\\Soraia\\Desktop\\Developer\\TesteTecnico\\carefy-web\\src\\pages\\PatientPage\\index.tsx":"8","D:\\Soraia\\Desktop\\Developer\\TesteTecnico\\carefy-web\\src\\pages\\PhysicianPage\\index.tsx":"9","D:\\Soraia\\Desktop\\Developer\\TesteTecnico\\carefy-web\\src\\pages\\PhysicianPage\\styles.ts":"10","D:\\Soraia\\Desktop\\Developer\\TesteTecnico\\carefy-web\\src\\pages\\PatientPage\\styles.ts":"11","D:\\Soraia\\Desktop\\Developer\\TesteTecnico\\carefy-web\\src\\components\\Input\\index.tsx":"12","D:\\Soraia\\Desktop\\Developer\\TesteTecnico\\carefy-web\\src\\components\\Button\\styles.ts":"13","D:\\Soraia\\Desktop\\Developer\\TesteTecnico\\carefy-web\\src\\components\\Input\\styles.ts":"14","D:\\Soraia\\Desktop\\Developer\\TesteTecnico\\carefy-web\\src\\components\\Button\\index.tsx":"15","D:\\Soraia\\Desktop\\Developer\\TesteTecnico\\carefy-web\\src\\components\\SmallInput\\styles.ts":"16","D:\\Soraia\\Desktop\\Developer\\TesteTecnico\\carefy-web\\src\\components\\SmallInput\\index.tsx":"17","D:\\Soraia\\Desktop\\Developer\\TesteTecnico\\carefy-web\\src\\components\\Footer\\index.tsx":"18","D:\\Soraia\\Desktop\\Developer\\TesteTecnico\\carefy-web\\src\\components\\Footer\\styles.ts":"19","D:\\Soraia\\Desktop\\Developer\\TesteTecnico\\carefy-web\\src\\pages\\Dashboard\\styles.ts":"20","D:\\Soraia\\Desktop\\Developer\\TesteTecnico\\carefy-web\\src\\pages\\Dashboard\\index.tsx":"21","D:\\Soraia\\Desktop\\Developer\\TesteTecnico\\carefy-web\\src\\pages\\AppointmentPage\\index.tsx":"22","D:\\Soraia\\Desktop\\Developer\\TesteTecnico\\carefy-web\\src\\pages\\AppointmentPage\\styles.ts":"23"},{"size":197,"mtime":1610739778529,"results":"24","hashOfConfig":"25"},{"size":371,"mtime":1611149694754,"results":"26","hashOfConfig":"25"},{"size":123,"mtime":1610739902587,"results":"27","hashOfConfig":"25"},{"size":738,"mtime":1610803190983,"results":"28","hashOfConfig":"25"},{"size":548,"mtime":1611154102306,"results":"29","hashOfConfig":"25"},{"size":386,"mtime":1610749089456,"results":"30","hashOfConfig":"25"},{"size":310,"mtime":1610739754747,"results":"31","hashOfConfig":"25"},{"size":9586,"mtime":1611193861466,"results":"32","hashOfConfig":"25"},{"size":10126,"mtime":1611157118388,"results":"33","hashOfConfig":"25"},{"size":2365,"mtime":1611155810975,"results":"34","hashOfConfig":"25"},{"size":2365,"mtime":1611192212828,"results":"35","hashOfConfig":"25"},{"size":1520,"mtime":1611142641249,"results":"36","hashOfConfig":"25"},{"size":1494,"mtime":1611164668035,"results":"37","hashOfConfig":"25"},{"size":647,"mtime":1611156178823,"results":"38","hashOfConfig":"25"},{"size":323,"mtime":1610896846693,"results":"39","hashOfConfig":"25"},{"size":687,"mtime":1611163758057,"results":"40","hashOfConfig":"25"},{"size":1588,"mtime":1611163729045,"results":"41","hashOfConfig":"25"},{"size":921,"mtime":1611149553464,"results":"42","hashOfConfig":"25"},{"size":570,"mtime":1611149849781,"results":"43","hashOfConfig":"25"},{"size":1006,"mtime":1611152732868,"results":"44","hashOfConfig":"25"},{"size":2075,"mtime":1611154062678,"results":"45","hashOfConfig":"25"},{"size":11043,"mtime":1611175178452,"results":"46","hashOfConfig":"25"},{"size":2365,"mtime":1611162807312,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"7dfsng",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"D:\\Soraia\\Desktop\\Developer\\TesteTecnico\\carefy-web\\src\\index.tsx",[],["100","101"],"D:\\Soraia\\Desktop\\Developer\\TesteTecnico\\carefy-web\\src\\routes\\index.tsx",[],"D:\\Soraia\\Desktop\\Developer\\TesteTecnico\\carefy-web\\src\\services\\api.ts",[],["102","103"],"D:\\Soraia\\Desktop\\Developer\\TesteTecnico\\carefy-web\\src\\components\\Header\\styles.ts",[],["104","105"],"D:\\Soraia\\Desktop\\Developer\\TesteTecnico\\carefy-web\\src\\components\\Header\\index.tsx",[],"D:\\Soraia\\Desktop\\Developer\\TesteTecnico\\carefy-web\\src\\styles\\global.ts",[],["106","107"],"D:\\Soraia\\Desktop\\Developer\\TesteTecnico\\carefy-web\\src\\App.tsx",[],"D:\\Soraia\\Desktop\\Developer\\TesteTecnico\\carefy-web\\src\\pages\\PatientPage\\index.tsx",["108"],"D:\\Soraia\\Desktop\\Developer\\TesteTecnico\\carefy-web\\src\\pages\\PhysicianPage\\index.tsx",["109"],"import React, { useState, useRef, useEffect } from 'react';\r\nimport api from '../../services/api';\r\nimport { Form } from '@unform/web';\r\nimport Header from '../../components/Header';\r\nimport Input from '../../components/Input';\r\nimport Button from '../../components/Button';\r\nimport Logo from '../../assets/carefyLogo5.png';\r\nimport Footer from '../../components/Footer';\r\n\r\nimport { Container, TableContainer, Title, Content } from './styles';\r\n\r\ninterface Physician {\r\n  id: string;\r\n  name: string;\r\n  medicalSpecialty: string;\r\n  created_at: Date;\r\n  updated_at: Date;\r\n}\r\n\r\ninterface IName {\r\n    name: string;\r\n}\r\n\r\ninterface ISpecialty {\r\n    medicalSpecialty: string;\r\n}\r\n\r\ninterface ICreate {\r\n    name: string;\r\n    medicalSpecialty: string;\r\n  }\r\n\r\nconst PhysicianPage: React.FC = () => {\r\n    const formRef = useRef(null);\r\n\r\n\r\n    const [physicianArray, setPhysicianArray] = useState<Physician[]>([]);\r\n    const [foundedPhysician, setFoundedPhysician] = useState<Physician[]>([]);\r\n\r\n\r\n/* **[USE EFFECT - CARREGA OS DADOS DE FORMA AUTOMÁTICA JUNTO COM A PÁGINA]** */\r\n//   useEffect(() => {\r\n//     async function loadPhysician(): Promise<void> {\r\n//       const response = await api.get('/physicians/index');\r\n//       const physicians = response.data;\r\n//       setPhysicianArray(physicians);\r\n//     }\r\n//     loadPhysician();\r\n//   }, [physicianArray]);\r\n/* ************************************************************************** */\r\n\r\n/* ************************[INDEX PHYSICIAN]********************************* */\r\nasync function handleIndex(): Promise<void> {\r\n    const response = await api.get(`/physicians/index`);\r\n    const physicians = response.data;\r\n    setPhysicianArray(physicians);\r\n  }\r\n/* ************************************************************************** */\r\n\r\n/* **********************[SHOW PHYSICIAN BY NAME]**************************** */\r\nasync function handleShowPhysicianByName({name}: IName): Promise<Physician[]> {\r\n\r\n      const response = await api.get(`/physicians/showbyname`, {\r\n        params: {\r\n            name,\r\n        }\r\n    });\r\n    const physician = response.data;\r\n    setFoundedPhysician(physician);\r\n    return physician;\r\n  }\r\n/* ************************************************************************** */\r\n\r\n/* *******************[SHOW PHYSICIAN BY SPECIALTY]************************** */\r\nasync function handleShowPhysicianBySpecialty({\r\n    medicalSpecialty\r\n}: ISpecialty): Promise<Physician[]> {\r\n\r\n    const response = await api.get(`/physicians/showbyspecialty`, {\r\n      params: {\r\n          medicalSpecialty,\r\n      }\r\n  });\r\n  const physician = response.data;\r\n  setFoundedPhysician(physician);\r\n  return physician;\r\n}\r\n/* ************************************************************************** */\r\n\r\n/* *************************[CREATE PHYSICIAN]******************************* */\r\nasync function handleAddPhysician(data: ICreate): Promise<Physician> {\r\n    \r\n    console.log('Array: ', data)\r\n    \r\n    const response = await api.post('/physicians', {\r\n        name: data.name,\r\n        medicalSpecialty: data.medicalSpecialty,   \r\n    });\r\n\r\n    const newPhysician = response.data;\r\n    return newPhysician;\r\n  }\r\n/* ************************************************************************** */\r\n\r\n\r\n  async function handleListAppointments(id: string | undefined): Promise<void> {\r\n    const response = await api.get(`/physicians/${id}`);\r\n    console.log(response);\r\n  }\r\n\r\n  async function handleEdit(id: string | undefined): Promise<void> {\r\n    const response = await api.patch(`/physicians/${id}`);\r\n    console.log(response);\r\n  }\r\n\r\n  async function handleDelete(id: string | undefined): Promise<void> {\r\n    const response = await api.delete(`/physicians/${id}`);\r\n    console.log(response);\r\n  }\r\n\r\n    return (\r\n        <>\r\n            <Header size='small'/>\r\n            <Title>\r\n                <h1>Encontre o seu médico:</h1>\r\n            </Title>\r\n            <Container>\r\n                <Content>\r\n                    <Form ref={formRef} onSubmit={handleShowPhysicianByName}>\r\n                        <div className=\"inputContainer\">\r\n                            <legend>Procure por nome</legend>\r\n                            <Input name=\"name\" placeholder=\"Nome\" />\r\n                        </div>\r\n                        <Button\r\n                            className=\"listButton\"\r\n                            type=\"submit\"\r\n                        >\r\n                            Buscar\r\n                        </Button>\r\n                    </Form>\r\n                    <Form ref={formRef} onSubmit={handleShowPhysicianBySpecialty}>\r\n                        <div className=\"inputContainer\">\r\n                            <legend>Procure por especialidade</legend>\r\n                            <Input name=\"medicalSpecialty\" placeholder=\"Especialidade\" />\r\n                        </div>\r\n                        <Button\r\n                            className=\"listButton\"\r\n                            type=\"submit\"\r\n                        >\r\n                            Buscar\r\n                        </Button>\r\n                    </Form>\r\n                </Content>\r\n                <TableContainer>\r\n                    <table>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Nome</th>\r\n                                <th>Especialidade Médica</th>\r\n                            </tr>\r\n                        </thead>\r\n                        {foundedPhysician.map(physician => (\r\n                            <tbody\r\n                            key={physician.id}>\r\n                            <tr>\r\n                                <td>{physician.name}</td>\r\n                                <td>{physician.medicalSpecialty}</td>\r\n                            </tr>\r\n                            <Button\r\n                                className=\"blueButton\"\r\n                                type=\"button\"\r\n                                onClick={() => handleListAppointments(physician.id)}\r\n                            >\r\n                                Agenda\r\n                            </Button>\r\n                            <Button\r\n                                className=\"greenButton\"\r\n                                type=\"button\"\r\n                                onClick={() => handleEdit(physician.id)}\r\n                            >\r\n                                Editar\r\n                            </Button>\r\n                            <Button\r\n                                className=\"redButton\"\r\n                                type=\"button\"\r\n                                onClick={() => handleDelete(physician.id)}\r\n                            >\r\n                                Deletar\r\n                            </Button>\r\n                        </tbody>\r\n                        ))}\r\n                    </table>\r\n                </TableContainer>\r\n            </Container>\r\n\r\n            <Container>\r\n                <TableContainer>\r\n                    <div id=\"title\">\r\n                        <Title>\r\n                            <h1>Lista de Médicos</h1>\r\n                            <Button\r\n                                className=\"especialButton\"\r\n                                type=\"button\"\r\n                                onClick={() => handleIndex()}\r\n                            >\r\n                                Listar Médicos\r\n                            </Button>\r\n                        </Title>\r\n                    </div>\r\n                    <table>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Nome</th>\r\n                                <th>Especialidade Médica</th>\r\n                            </tr>\r\n                        </thead>\r\n\r\n                        {physicianArray.map(physician => (\r\n                        <tbody\r\n                            key={physician.id}>\r\n                            <tr>\r\n                                <td>{physician.name}</td>\r\n                                <td>{physician.medicalSpecialty}</td>\r\n                            </tr>\r\n                            <Button\r\n                                className=\"blueButton\"\r\n                                type=\"button\"\r\n                                onClick={() => handleListAppointments(physician.id)}\r\n                            >\r\n                                Agenda\r\n                            </Button>\r\n                            <Button\r\n                                className=\"greenButton\"\r\n                                type=\"button\"\r\n                                onClick={() => handleEdit(physician.id)}\r\n                            >\r\n                                Editar\r\n                            </Button>\r\n                            <Button\r\n                                className=\"redButton\"\r\n                                type=\"button\"\r\n                                onClick={() => handleDelete(physician.id)}\r\n                            >\r\n                                Deletar\r\n                            </Button>\r\n                        </tbody>\r\n                        ))}\r\n                    </table>\r\n                </TableContainer>\r\n            </Container>\r\n            \r\n            <Container>\r\n                <Form ref={formRef} onSubmit={handleAddPhysician}>\r\n                    <Title><h1>Cadastre um novo médico:</h1></Title>\r\n                    <div className=\"createContainer\">\r\n                    <Input name=\"name\" placeholder=\"Nome\"/>\r\n                    <Input name=\"medicalSpecialty\" placeholder=\"Especialidade Médica\" />\r\n                    <Button\r\n                        className=\"greenButton\"\r\n                        type=\"submit\"\r\n                    >\r\n                        Enviar\r\n                    </Button>\r\n                    </div>\r\n                    <img src={Logo} alt=\"Carefy Logo\" />\r\n                </Form>\r\n            </Container>\r\n\r\n            <Footer />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PhysicianPage;\r\n","D:\\Soraia\\Desktop\\Developer\\TesteTecnico\\carefy-web\\src\\pages\\PhysicianPage\\styles.ts",[],"D:\\Soraia\\Desktop\\Developer\\TesteTecnico\\carefy-web\\src\\pages\\PatientPage\\styles.ts",[],"D:\\Soraia\\Desktop\\Developer\\TesteTecnico\\carefy-web\\src\\components\\Input\\index.tsx",[],"D:\\Soraia\\Desktop\\Developer\\TesteTecnico\\carefy-web\\src\\components\\Button\\styles.ts",[],"D:\\Soraia\\Desktop\\Developer\\TesteTecnico\\carefy-web\\src\\components\\Input\\styles.ts",[],"D:\\Soraia\\Desktop\\Developer\\TesteTecnico\\carefy-web\\src\\components\\Button\\index.tsx",[],"D:\\Soraia\\Desktop\\Developer\\TesteTecnico\\carefy-web\\src\\components\\SmallInput\\styles.ts",[],"D:\\Soraia\\Desktop\\Developer\\TesteTecnico\\carefy-web\\src\\components\\SmallInput\\index.tsx",[],"D:\\Soraia\\Desktop\\Developer\\TesteTecnico\\carefy-web\\src\\components\\Footer\\index.tsx",[],"D:\\Soraia\\Desktop\\Developer\\TesteTecnico\\carefy-web\\src\\components\\Footer\\styles.ts",[],"D:\\Soraia\\Desktop\\Developer\\TesteTecnico\\carefy-web\\src\\pages\\Dashboard\\styles.ts",[],"D:\\Soraia\\Desktop\\Developer\\TesteTecnico\\carefy-web\\src\\pages\\Dashboard\\index.tsx",[],["110","111"],"D:\\Soraia\\Desktop\\Developer\\TesteTecnico\\carefy-web\\src\\pages\\AppointmentPage\\index.tsx",["112"],"D:\\Soraia\\Desktop\\Developer\\TesteTecnico\\carefy-web\\src\\pages\\AppointmentPage\\styles.ts",[],{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"113","replacedBy":"117"},{"ruleId":"115","replacedBy":"118"},{"ruleId":"113","replacedBy":"119"},{"ruleId":"115","replacedBy":"120"},{"ruleId":"113","replacedBy":"121"},{"ruleId":"115","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":1,"column":35,"nodeType":"125","messageId":"126","endLine":1,"endColumn":44},{"ruleId":"123","severity":1,"message":"124","line":1,"column":35,"nodeType":"125","messageId":"126","endLine":1,"endColumn":44},{"ruleId":"113","replacedBy":"127"},{"ruleId":"115","replacedBy":"128"},{"ruleId":"123","severity":1,"message":"124","line":1,"column":35,"nodeType":"125","messageId":"126","endLine":1,"endColumn":44},"no-native-reassign",["129"],"no-negated-in-lhs",["130"],["129"],["130"],["129"],["130"],["129"],["130"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar",["129"],["130"],"no-global-assign","no-unsafe-negation"]