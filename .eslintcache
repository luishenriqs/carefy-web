[{"D:\\Soraia\\Desktop\\Developer\\TesteTecnico\\carefy-web\\src\\index.tsx":"1","D:\\Soraia\\Desktop\\Developer\\TesteTecnico\\carefy-web\\src\\routes\\index.tsx":"2","D:\\Soraia\\Desktop\\Developer\\TesteTecnico\\carefy-web\\src\\services\\api.ts":"3","D:\\Soraia\\Desktop\\Developer\\TesteTecnico\\carefy-web\\src\\components\\Header\\styles.ts":"4","D:\\Soraia\\Desktop\\Developer\\TesteTecnico\\carefy-web\\src\\components\\Header\\index.tsx":"5","D:\\Soraia\\Desktop\\Developer\\TesteTecnico\\carefy-web\\src\\styles\\global.ts":"6","D:\\Soraia\\Desktop\\Developer\\TesteTecnico\\carefy-web\\src\\App.tsx":"7","D:\\Soraia\\Desktop\\Developer\\TesteTecnico\\carefy-web\\src\\pages\\PatientPage\\index.tsx":"8","D:\\Soraia\\Desktop\\Developer\\TesteTecnico\\carefy-web\\src\\pages\\PhysicianPage\\index.tsx":"9","D:\\Soraia\\Desktop\\Developer\\TesteTecnico\\carefy-web\\src\\pages\\PhysicianPage\\styles.ts":"10","D:\\Soraia\\Desktop\\Developer\\TesteTecnico\\carefy-web\\src\\pages\\PatientPage\\styles.ts":"11","D:\\Soraia\\Desktop\\Developer\\TesteTecnico\\carefy-web\\src\\components\\Input\\index.tsx":"12","D:\\Soraia\\Desktop\\Developer\\TesteTecnico\\carefy-web\\src\\components\\Button\\styles.ts":"13","D:\\Soraia\\Desktop\\Developer\\TesteTecnico\\carefy-web\\src\\components\\Input\\styles.ts":"14","D:\\Soraia\\Desktop\\Developer\\TesteTecnico\\carefy-web\\src\\components\\Button\\index.tsx":"15","D:\\Soraia\\Desktop\\Developer\\TesteTecnico\\carefy-web\\src\\components\\SmallInput\\styles.ts":"16","D:\\Soraia\\Desktop\\Developer\\TesteTecnico\\carefy-web\\src\\components\\SmallInput\\index.tsx":"17","D:\\Soraia\\Desktop\\Developer\\TesteTecnico\\carefy-web\\src\\components\\Footer\\index.tsx":"18","D:\\Soraia\\Desktop\\Developer\\TesteTecnico\\carefy-web\\src\\components\\Footer\\styles.ts":"19","D:\\Soraia\\Desktop\\Developer\\TesteTecnico\\carefy-web\\src\\pages\\Dashboard\\styles.ts":"20","D:\\Soraia\\Desktop\\Developer\\TesteTecnico\\carefy-web\\src\\pages\\Dashboard\\index.tsx":"21"},{"size":197,"mtime":1610739778529,"results":"22","hashOfConfig":"23"},{"size":371,"mtime":1611149694754,"results":"24","hashOfConfig":"23"},{"size":123,"mtime":1610739902587,"results":"25","hashOfConfig":"23"},{"size":738,"mtime":1610803190983,"results":"26","hashOfConfig":"23"},{"size":548,"mtime":1611154102306,"results":"27","hashOfConfig":"23"},{"size":386,"mtime":1610749089456,"results":"28","hashOfConfig":"23"},{"size":310,"mtime":1610739754747,"results":"29","hashOfConfig":"23"},{"size":2833,"mtime":1611149660472,"results":"30","hashOfConfig":"23"},{"size":10070,"mtime":1611147899564,"results":"31","hashOfConfig":"23"},{"size":2556,"mtime":1611147942983,"results":"32","hashOfConfig":"23"},{"size":1895,"mtime":1610793306116,"results":"33","hashOfConfig":"23"},{"size":1520,"mtime":1611142641249,"results":"34","hashOfConfig":"23"},{"size":1525,"mtime":1611153010333,"results":"35","hashOfConfig":"23"},{"size":647,"mtime":1611142707850,"results":"36","hashOfConfig":"23"},{"size":323,"mtime":1610896846693,"results":"37","hashOfConfig":"23"},{"size":699,"mtime":1611142790372,"results":"38","hashOfConfig":"23"},{"size":1699,"mtime":1611110139914,"results":"39","hashOfConfig":"23"},{"size":921,"mtime":1611149553464,"results":"40","hashOfConfig":"23"},{"size":570,"mtime":1611149849781,"results":"41","hashOfConfig":"23"},{"size":1006,"mtime":1611152732868,"results":"42","hashOfConfig":"23"},{"size":2075,"mtime":1611154062678,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"7dfsng",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Soraia\\Desktop\\Developer\\TesteTecnico\\carefy-web\\src\\index.tsx",[],["90","91"],"D:\\Soraia\\Desktop\\Developer\\TesteTecnico\\carefy-web\\src\\routes\\index.tsx",[],"D:\\Soraia\\Desktop\\Developer\\TesteTecnico\\carefy-web\\src\\services\\api.ts",[],["92","93"],"D:\\Soraia\\Desktop\\Developer\\TesteTecnico\\carefy-web\\src\\components\\Header\\styles.ts",[],"D:\\Soraia\\Desktop\\Developer\\TesteTecnico\\carefy-web\\src\\components\\Header\\index.tsx",[],"D:\\Soraia\\Desktop\\Developer\\TesteTecnico\\carefy-web\\src\\styles\\global.ts",[],["94","95"],"D:\\Soraia\\Desktop\\Developer\\TesteTecnico\\carefy-web\\src\\App.tsx",[],"D:\\Soraia\\Desktop\\Developer\\TesteTecnico\\carefy-web\\src\\pages\\PatientPage\\index.tsx",[],"D:\\Soraia\\Desktop\\Developer\\TesteTecnico\\carefy-web\\src\\pages\\PhysicianPage\\index.tsx",["96"],"import React, { useState, useRef, useEffect } from 'react';\r\nimport api from '../../services/api';\r\nimport { Form } from '@unform/web';\r\nimport Header from '../../components/Header';\r\nimport Input from '../../components/Input';\r\nimport Button from '../../components/Button';\r\nimport Logo from '../../assets/carefyLogo5.png';\r\nimport PhysicianFooter from '../../components/PhysicianFooter';\r\n\r\nimport { Container, TableContainer, Title, Content } from './styles';\r\n\r\ninterface Physician {\r\n  id: string;\r\n  name: string;\r\n  medicalSpecialty: string;\r\n  created_at: Date;\r\n  updated_at: Date;\r\n}\r\n\r\ninterface IName {\r\n    name: string;\r\n}\r\n\r\ninterface ISpecialty {\r\n    medicalSpecialty: string;\r\n}\r\n\r\ninterface ICreate {\r\n    name: string;\r\n    medicalSpecialty: string;\r\n  }\r\n\r\nconst PhysicianPage: React.FC = () => {\r\n    const formRef = useRef(null);\r\n\r\n\r\n    const [physicianArray, setPhysicianArray] = useState<Physician[]>([]);\r\n    const [foundedPhysician, setFoundedPhysician] = useState<Physician[]>([]);\r\n\r\n\r\n/* **[USE EFFECT - CARREGA OS DADOS DE FORMA AUTOMÁTICA JUNTO COM A PÁGINA]** */\r\n//   useEffect(() => {\r\n//     async function loadPhysician(): Promise<void> {\r\n//       const response = await api.get('/physicians/index');\r\n//       const physicians = response.data;\r\n//       setPhysicianArray(physicians);\r\n//     }\r\n//     loadPhysician();\r\n//   }, [physicianArray]);\r\n/* ************************************************************************** */\r\n\r\n/* ************************[INDEX PHYSICIAN]********************************* */\r\nasync function handleIndex(): Promise<void> {\r\n    const response = await api.get(`/physicians/index`);\r\n    const physicians = response.data;\r\n    setPhysicianArray(physicians);\r\n  }\r\n/* ************************************************************************** */\r\n\r\n/* **********************[SHOW PHYSICIAN BY NAME]**************************** */\r\nasync function handleShowPhysicianByName({name}: IName): Promise<Physician[]> {\r\n\r\n      const response = await api.get(`/physicians/showbyname`, {\r\n        params: {\r\n            name,\r\n        }\r\n    });\r\n    const physician = response.data;\r\n    setFoundedPhysician(physician);\r\n    return physician;\r\n  }\r\n/* ************************************************************************** */\r\n\r\n/* *******************[SHOW PHYSICIAN BY SPECIALTY]************************** */\r\nasync function handleShowPhysicianBySpecialty({\r\n    medicalSpecialty\r\n}: ISpecialty): Promise<Physician[]> {\r\n\r\n    const response = await api.get(`/physicians/showbyspecialty`, {\r\n      params: {\r\n          medicalSpecialty,\r\n      }\r\n  });\r\n  const physician = response.data;\r\n  setFoundedPhysician(physician);\r\n  return physician;\r\n}\r\n/* ************************************************************************** */\r\n\r\n/* *************************[CREATE PHYSICIAN]******************************* */\r\nasync function handleAddPhysician(data: ICreate): Promise<Physician> {\r\n    \r\n    console.log('Array: ', data)\r\n    \r\n    const response = await api.post('/physicians', {\r\n        name: data.name,\r\n        medicalSpecialty: data.medicalSpecialty,   \r\n    });\r\n\r\n    const newPhysician = response.data;\r\n    return newPhysician;\r\n  }\r\n/* ************************************************************************** */\r\n\r\n\r\n  async function handleListAppointments(id: string | undefined): Promise<void> {\r\n    const response = await api.get(`/physicians/${id}`);\r\n    console.log(response);\r\n  }\r\n\r\n  async function handleEdit(id: string | undefined): Promise<void> {\r\n    const response = await api.patch(`/physicians/${id}`);\r\n    console.log(response);\r\n  }\r\n\r\n  async function handleDelete(id: string | undefined): Promise<void> {\r\n    const response = await api.delete(`/physicians/${id}`);\r\n    console.log(response);\r\n  }\r\n\r\n    return (\r\n        <>\r\n            <Header size='small'/>\r\n            <Title>\r\n                <h1>Encontre o seu médico:</h1>\r\n            </Title>\r\n            <Container>\r\n                <Content>\r\n                    <Form ref={formRef} onSubmit={handleShowPhysicianByName}>\r\n                        <div className=\"inputContainer\">\r\n                            <legend>Procure por nome</legend>\r\n                            <Input name=\"name\" placeholder=\"Nome\" />\r\n                        </div>\r\n                        <Button\r\n                            className=\"listButton\"\r\n                            type=\"submit\"\r\n                        >\r\n                            Buscar\r\n                        </Button>\r\n                    </Form>\r\n                    <Form ref={formRef} onSubmit={handleShowPhysicianBySpecialty}>\r\n                        <div className=\"inputContainer\">\r\n                            <legend>Procure por especialidade</legend>\r\n                            <Input name=\"medicalSpecialty\" placeholder=\"Especialidade\" />\r\n                        </div>\r\n                        <Button\r\n                            className=\"listButton\"\r\n                            type=\"submit\"\r\n                        >\r\n                            Buscar\r\n                        </Button>\r\n                    </Form>\r\n                </Content>\r\n                <TableContainer>\r\n                    <table>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Nome</th>\r\n                                <th>Especialidade Médica</th>\r\n                            </tr>\r\n                        </thead>\r\n                        {foundedPhysician.map(physician => (\r\n                            <tbody\r\n                            key={physician.id}>\r\n                            <tr>\r\n                                <td>{physician.name}</td>\r\n                                <td>{physician.medicalSpecialty}</td>\r\n                            </tr>\r\n                            <Button\r\n                                className=\"appointmentButton\"\r\n                                type=\"button\"\r\n                                onClick={() => handleListAppointments(physician.id)}\r\n                            >\r\n                                Agenda\r\n                            </Button>\r\n                            <Button\r\n                                className=\"updateButton\"\r\n                                type=\"button\"\r\n                                onClick={() => handleEdit(physician.id)}\r\n                            >\r\n                                Editar\r\n                            </Button>\r\n                            <Button\r\n                                className=\"deleteButton\"\r\n                                type=\"button\"\r\n                                onClick={() => handleDelete(physician.id)}\r\n                            >\r\n                                Deletar\r\n                            </Button>\r\n                        </tbody>\r\n                        ))}\r\n                    </table>\r\n                </TableContainer>\r\n            </Container>\r\n\r\n            <Container>\r\n                <TableContainer>\r\n                    <div id=\"title\">\r\n                        <h1>Lista de Médicos</h1>\r\n                        <Button\r\n                            className=\"listButton\"\r\n                            type=\"button\"\r\n                            onClick={() => handleIndex()}\r\n                        >\r\n                            Listar Médicos\r\n                        </Button>\r\n                    </div>\r\n                    <table>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Nome</th>\r\n                                <th>Especialidade Médica</th>\r\n                            </tr>\r\n                        </thead>\r\n\r\n                        {physicianArray.map(physician => (\r\n                        <tbody\r\n                            key={physician.id}>\r\n                            <tr>\r\n                                <td>{physician.name}</td>\r\n                                <td>{physician.medicalSpecialty}</td>\r\n                            </tr>\r\n                            <Button\r\n                                className=\"appointmentButton\"\r\n                                type=\"button\"\r\n                                onClick={() => handleListAppointments(physician.id)}\r\n                            >\r\n                                Agenda\r\n                            </Button>\r\n                            <Button\r\n                                className=\"updateButton\"\r\n                                type=\"button\"\r\n                                onClick={() => handleEdit(physician.id)}\r\n                            >\r\n                                Editar\r\n                            </Button>\r\n                            <Button\r\n                                className=\"deleteButton\"\r\n                                type=\"button\"\r\n                                onClick={() => handleDelete(physician.id)}\r\n                            >\r\n                                Deletar\r\n                            </Button>\r\n                        </tbody>\r\n                        ))}\r\n                    </table>\r\n                </TableContainer>\r\n            </Container>\r\n            \r\n            <Container>\r\n                <Form ref={formRef} onSubmit={handleAddPhysician}>\r\n                    <Title><h1>Cadastre um novo médico:</h1></Title>\r\n                    <div className=\"createContainer\">\r\n                    <Input name=\"name\" placeholder=\"Nome\"/>\r\n                    <Input name=\"medicalSpecialty\" placeholder=\"Especialidade Médica\" />\r\n                    <Button\r\n                        className=\"addButton\"\r\n                        type=\"submit\"\r\n                    >\r\n                        Enviar\r\n                    </Button>\r\n                    </div>\r\n                    <img src={Logo} alt=\"Carefy Logo\" />\r\n                </Form>\r\n            </Container>\r\n\r\n            <PhysicianFooter />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PhysicianPage;\r\n","D:\\Soraia\\Desktop\\Developer\\TesteTecnico\\carefy-web\\src\\pages\\PhysicianPage\\styles.ts",[],"D:\\Soraia\\Desktop\\Developer\\TesteTecnico\\carefy-web\\src\\pages\\PatientPage\\styles.ts",[],"D:\\Soraia\\Desktop\\Developer\\TesteTecnico\\carefy-web\\src\\components\\Input\\index.tsx",[],"D:\\Soraia\\Desktop\\Developer\\TesteTecnico\\carefy-web\\src\\components\\Button\\styles.ts",[],"D:\\Soraia\\Desktop\\Developer\\TesteTecnico\\carefy-web\\src\\components\\Input\\styles.ts",[],"D:\\Soraia\\Desktop\\Developer\\TesteTecnico\\carefy-web\\src\\components\\Button\\index.tsx",[],"D:\\Soraia\\Desktop\\Developer\\TesteTecnico\\carefy-web\\src\\components\\SmallInput\\styles.ts",[],"D:\\Soraia\\Desktop\\Developer\\TesteTecnico\\carefy-web\\src\\components\\SmallInput\\index.tsx",[],"D:\\Soraia\\Desktop\\Developer\\TesteTecnico\\carefy-web\\src\\components\\Footer\\index.tsx",[],"D:\\Soraia\\Desktop\\Developer\\TesteTecnico\\carefy-web\\src\\components\\Footer\\styles.ts",[],"D:\\Soraia\\Desktop\\Developer\\TesteTecnico\\carefy-web\\src\\pages\\Dashboard\\styles.ts",[],"D:\\Soraia\\Desktop\\Developer\\TesteTecnico\\carefy-web\\src\\pages\\Dashboard\\index.tsx",[],{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"97","replacedBy":"101"},{"ruleId":"99","replacedBy":"102"},{"ruleId":"97","replacedBy":"103"},{"ruleId":"99","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":1,"column":35,"nodeType":"107","messageId":"108","endLine":1,"endColumn":44},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],["109"],["110"],["109"],["110"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]